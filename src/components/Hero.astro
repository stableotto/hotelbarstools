---
// Hero component props
export interface Props {
  title: string;
  subtitle?: string;
  backgroundImage: string;
  backgroundAlt?: string;
  ctaText?: string;
  ctaUrl?: string;
}

const { 
  title, 
  subtitle, 
  backgroundImage, 
  backgroundAlt = "Hotel Bar Stools background", 
  ctaText, 
  ctaUrl 
} = Astro.props;
---

<section class="hero" id="hero">
  <!-- Background Image -->
  <div class="hero-background">
    <img 
      src={backgroundImage}
      alt={backgroundAlt}
      class="hero-image"
      loading="eager"
      width="1920"
      height="1080"
    />
    <div class="hero-overlay"></div>
  </div>

  <!-- Hero Content -->
  <div class="container">
    <div class="hero-content">
      <h1 class="hero-title">{title}</h1>
      {subtitle && (
        <p class="hero-subtitle">{subtitle}</p>
      )}
      {ctaText && ctaUrl && (
        <div class="hero-cta">
          <a href={ctaUrl} class="hero-button">
            {ctaText}
            <span class="button-arrow" aria-hidden="true">→</span>
          </a>
        </div>
      )}
    </div>
  </div>

  <!-- Scroll Indicator -->
  <div class="scroll-indicator">
    <button 
      class="scroll-button" 
      aria-label="Scroll to content"
      onclick="document.querySelector('#main-content').scrollIntoView({ behavior: 'smooth' })"
    >
      <span class="scroll-arrow" aria-hidden="true">↓</span>
    </button>
  </div>
</section>

<style>
  .hero {
    position: relative;
    min-height: 100vh;
    min-height: 100dvh; /* Dynamic viewport height */
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    isolation: isolate;
  }

  /* Background Image */
  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
  }

  .hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  /* Dark Overlay */
  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.6) 0%,
      rgba(0, 0, 0, 0.4) 50%,
      rgba(0, 0, 0, 0.7) 100%
    );
    z-index: -1;
  }

  /* Hero Content */
  .hero-content {
    text-align: center;
    color: var(--color-white);
    max-width: 800px;
    margin: 0 auto;
    padding: var(--space-xl) var(--space-sm);
    animation: heroFadeIn 1s ease-out;
  }

  .hero-title {
    font-size: clamp(2.5rem, 8vw, 5rem);
    font-weight: 700;
    line-height: 1.1;
    margin-bottom: var(--space-md);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    letter-spacing: -0.02em;
  }

  .hero-subtitle {
    font-size: clamp(1.125rem, 3vw, 1.5rem);
    font-weight: 300;
    line-height: 1.4;
    margin-bottom: var(--space-lg);
    opacity: 0.95;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  }

  /* Call to Action Button */
  .hero-cta {
    margin-top: var(--space-lg);
  }

  .hero-button {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-md) var(--space-lg);
    background-color: var(--color-accent);
    color: var(--color-white);
    text-decoration: none;
    font-weight: 600;
    font-size: var(--font-size-lg);
    border-radius: 50px;
    transition: all var(--transition-normal);
    box-shadow: 0 4px 15px rgba(212, 165, 116, 0.3);
    border: 2px solid var(--color-accent);
  }

  .hero-button:hover,
  .hero-button:focus {
    background-color: transparent;
    color: var(--color-accent);
    border-color: var(--color-accent);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(212, 165, 116, 0.4);
  }

  .button-arrow {
    transition: transform var(--transition-fast);
  }

  .hero-button:hover .button-arrow {
    transform: translateX(4px);
  }

  /* Scroll Indicator */
  .scroll-indicator {
    position: absolute;
    bottom: var(--space-lg);
    left: 50%;
    transform: translateX(-50%);
    animation: scrollBounce 2s infinite;
  }

  .scroll-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    color: var(--color-white);
    cursor: pointer;
    transition: all var(--transition-normal);
    backdrop-filter: blur(10px);
  }

  .scroll-button:hover,
  .scroll-button:focus {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
  }

  .scroll-arrow {
    font-size: 1.5rem;
    animation: arrowBounce 1.5s infinite;
  }

  /* Animations */
  @keyframes heroFadeIn {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scrollBounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateX(-50%) translateY(0);
    }
    40% {
      transform: translateX(-50%) translateY(-10px);
    }
    60% {
      transform: translateX(-50%) translateY(-5px);
    }
  }

  @keyframes arrowBounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(4px);
    }
    60% {
      transform: translateY(2px);
    }
  }

  /* Responsive Design */
  @media (max-width: 767px) {
    .hero-content {
      padding: var(--space-lg) var(--space-sm);
    }

    .hero-title {
      margin-bottom: var(--space-sm);
    }

    .hero-subtitle {
      margin-bottom: var(--space-md);
    }

    .hero-button {
      padding: var(--space-sm) var(--space-md);
      font-size: var(--font-size-base);
    }
  }

  @media (min-width: 768px) {
    .hero-content {
      padding: var(--space-xl);
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    .hero-content,
    .scroll-indicator,
    .scroll-arrow,
    .hero-button,
    .button-arrow {
      animation: none;
    }

    .hero-button:hover {
      transform: none;
    }

    .scroll-button:hover {
      transform: none;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .hero-overlay {
      background: rgba(0, 0, 0, 0.8);
    }

    .hero-button {
      border-width: 3px;
    }

    .scroll-button {
      border-width: 3px;
    }
  }

  /* Print styles */
  @media print {
    .hero {
      min-height: 50vh;
      page-break-inside: avoid;
    }

    .scroll-indicator {
      display: none;
    }

    .hero-button {
      border: 2px solid var(--color-text);
      background: transparent;
      color: var(--color-text);
    }
  }
</style> 